/**
 *
 * --------------------------------
 *  CSS Style
 * -------------------------------
 *
 */

// Variables
@import "variables";
// Breakpoints
@import "layout";
// Helpers
@import "reset";
@import "mixins";
@import "typography";
// Imports
@import "morph";

*,
*::before,
*::after {
	// position: relative;
	box-sizing: border-box;
}

:root {
	// Set 1rem = 10px, so 1.6rem is 16px, etc
	font-size: 62.5%;
}

p {

}

// Fancybox
.fancybox-navigation {
	position: unset;
}

@include media("<sm") {
	.fancybox-slide {
		padding: 44px 0;
	}
}

body {
	font: {
		family: $font, $font-system;
		size: $text-size;
		weight: $text-light;
	}
	line-height: 1.4;
	@include font-smoothing;
	background: $background;
	color: var(--text-color);
	width: 100%;
	-webkit-overflow-scrolling: touch;
	overflow-x: hidden;
	@include media("<xs") {
		font-size: 1.6rem;
	}
}
.gradient {
	z-index: 9999;
	width: 100%;
	position: fixed;
	left: 0;
	pointer-events: none;
	height: 4rem;
	&.top {
		top: 0;
		background: linear-gradient(0deg,rgba($background,0),var(--background));
	}
	&.bottom {
		bottom: 0;
		background: linear-gradient(180deg,rgba($background,0),var(--background));
	}
}

.main-wrap {
	display: grid;
	grid-template-columns: 1fr 1.75fr;
	grid-column-gap: 10rem;
	width: 100%;
	padding: 0 9rem;
	.col {
		&.left,
		&.right {
			padding: 9rem 0;
		}
		&.left {
			height: 100vh;
			position: fixed;
			position: fixed;
			display: flex;
			flex-direction: column;
		}
		&.right {
		}
	}
}
.social {
	display: flex;
	gap: 1rem;
	margin-top: auto;
	svg {
		width: 30px;
		height: auto;
		fill: white;
	}
	--px: 1px;
	.squircle {
		width: calc(var(--px)*52.1);
		height: calc(var(--px)*52.1);
		position: relative;
		vertical-align: middle;
		&:before,
		&:after,
		span:before,
		span:after{
			content: '';
			position: absolute;
			background: var(--green);
			transition: 150ms var(--standard-ease);
		}
		&:before,
		&:after {
			top: 0;
			bottom: 0;
		}
		&:before {
			width: 50%;
			left: calc(var(--px)*4);
			border-top-left-radius: 80% calc(var(--px)*10);
			border-bottom-left-radius: 80% calc(var(--px)*10);
		}
		&:after {
			width: calc(var(--px)*25);
			right: calc(var(--px)*4);
			border-top-right-radius: 80% 20%;
			border-bottom-right-radius: 80% 20%;
		}
		span {
			position: absolute;
			width: 100%;
			height: 100%;
			z-index: 5;
			display: grid;
			align-items: center;
			justify-content: center;
			&:before {
				width: calc(var(--px)*10);
				top: calc(var(--px)*4);
				bottom: calc(var(--px)*4);
				border-top-left-radius: 100% 50%;
				border-bottom-left-radius: 100% 50%;
			}
			&:after {
				width: calc(var(--px)*10);
				top: calc(var(--px)*4);
				bottom: calc(var(--px)*4);
				right: 0;
				border-top-right-radius: 100% 50%;
				border-bottom-right-radius: 100% 50%;
				z-index:4;
			}
		}
		&:hover {
			&:before,
			&:after,
			span:before,
			span:after{
				background: var(--blue);
			}
		}
	}
}
section {
	// display: grid;
	// grid-template-columns: repeat(2,1fr);
	// grid-gap: 2rem;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	gap: var(--flexGap);
}
body.modal-open {
	.modal-overlay {
		display: block;
		opacity: 1;
	}
}
.term-head {
	position: absolute;
	left: 0;
	top: 0;
	height: var(--termHead);
	width: 100%;
	border-radius: 10px 10px 0 0;
	background: var(--grey);
	display: flex;
	justify-content: flex-start;
	align-items: center;
	z-index: 1;
	.btn-wrap {
		display: flex;
		justify-content: flex-start;
		align-items: center;
		padding: 5px;
		margin-left: 4px;
		&:hover {
			.header-btn {
				&::before,
				&::after {
					opacity: 1;
				}
			}
		}
	}
	.header-btn {
		width: 12px;
		height: 12px;
		border-radius: 50%;
		border: 1px solid;
		position: relative;
		&:not(:first-of-type) {
			margin-left: 9px;
		}
		&.red {
			background-color: var(--browser-red);
			border-color: var(--browser-red);
			&::before,
			&::after {
				content: '';
				display: block;
				position: absolute;
				width: 1px;
				height: 8px;
				background: rgba(black,0.7);
				left: 50%;
				top: 50%;
				opacity: 0;
			}
			&::before{
				transform: translate(-50%,-50%) rotate(45deg);
			}
			&::after{
				transform: translate(-50%,-50%) rotate(-45deg);
			}
		}
		&.yellow {
			background-color: var(--browser-yellow);
			border-color: var(--browser-yellow);
			&::before{
				content: '';
				display: block;
				position: absolute;
				height: 2px;
				width: 8px;
				background: rgba(black,0.6);
				left: 50%;
				top: 50%;
				opacity: 0;
				transform: translate(-50%,-50%);
			}			}
		&.green {
			background-color: var(--browser-green);
			border-color: var(--browser-green);
			&::before,
			&::after {
				content: '';
				display: block;
				position: absolute;
				width: 0;
				height: 0;
				border: 3px solid transparent;
				left: 50%;
				top: 50%;
				opacity: 0;
			}
			&::before{
				border-top-color: rgba(black,0.6);
				border-left-color: rgba(black,0.6);
				transform: translate(-60%,-60%);
			}
			&::after{
				border-bottom-color: rgba(black,0.6);
				border-right-color: rgba(black,0.6);
				transform: translate(-40%,-40%);
			}
		}
	}
}
.terminal {
	width: 100%;
	display: block;
	position: relative;
	// height: 500px;
	width: 100%;
	background: darken($darker, 2%);
	margin-bottom: var(--flexGap);
	border-radius: 10px 10px 0 0;
	// code color scheme 
	.editor {
		padding: 1.8rem 1.8rem 1.8rem 1.2rem;
		margin-top: var(--termHead);
	}
	pre {
		padding: 0 4px;
		border-radius: 0;
		border-width: 0;
		margin: 0;
		z-index: 2;
		position: relative;
		line-height: 152%;
		font: {
			family: $font-code;
			size: 14px;
			weight: $text-regular;
		}
	}
	span {
		
		color: rgb(233, 237, 237); // white
		// CSS
		// HTML Element selector
		&.cm-tag {
			color: rgb(255, 83, 112); // red
		}
		// Class/ID
		&.cm-qualifier {
			// color: #decb6b;
			color: #ffca57
		}
		// Operator such as {} or ;
		&.cm-operator {
			color: rgb(233, 237, 237) !important;
		}
		// Empty space (4 spaces = 1 tab)
		&.cm-tab {
			display: inline-block;
			text-decoration: inherit;
		}
		// CSS Property extender like & or an ID
		&.cm-id-extender {
			color: #d18df0;
		}
		// CSS Property
		&.cm-property {
			// color: rgb(128, 203, 174) !important
			color: #accdd7;
		}
		// CSS Property Value
		&.cm-atom {
			// color: #f78c6c;
			color: #ff8563;
		}
		// CSS Property value that starts with paren like rgb
		&.cs-atom-paren {
			color: #79a9ff;
		}
		// Property Value String
		&.cm-string {
			color: rgb(195, 232, 141) !important;
		}
		// CSS Comment
		&.cm-comment {
			// color: rgb(84, 110, 122) !important;
			color: #718d9a;
			color: 'text goes here';
		}

		// HTML
		&.cm-attribute {
		    color: rgb(255, 203, 107); // yellow
		}
		&.cm-string {
		    color: rgb(195, 232, 141); // green
		}
	}
}
// resume
#education {
    .college {
        school: 'Purdue University';
        degree: 'Bachelors of Science in Computer Graphics Technology';
        timeline: calc(2010 - 2014);
    }
}
#skills {
	languages: 'HTML5, CSS3, SCSS, JavaScript, JSON, jQuery, PHP, Shopify\'s Liquid,';
	.platforms {
		&__shopify {
			experience: '4 years + 1 full theme development';
		}
		&__laravel {
			experience: '2 years of basic management, low knowledge of build/deployment';
		}
	}
}
// end resume
.morph-content {
	.term-head {
		.header-btn.green {
			&::before,
			&::after {
				border-color: transparent;
			}
			&::before {
				border-bottom-color: rgba(black,0.6);
				border-right-color: rgba(black,0.6);
				transform: translate(-100%,-100%);
			}
			&::after {
				border-top-color: rgba(black,0.6);
				border-left-color: rgba(black,0.6);
				transform: translate(0%,0%);
			}
		}
	}
}
.card {
	&__placeholder {
		max-width: 100%;
		width: calc(50% - (var(--flexGap) / 2));
		transition: var(--modalTiming) var(--standard-ease);
	}
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	height: 100%;
	background: var(--darker);
	position: relative;
	padding: 2rem;
	transition: var(--modalTiming) var(--standard-ease);
	@include box-shadow(3dp);
	border-radius: 10px 10px 0 0;
	header {
		margin-top: var(--termHead);
	}
	.content {
		padding-bottom: 2rem;
	}
	h4 {
		font-size: 1.6rem;
		color: var(--text-color);
	}
	h3 {
		font-size: 2.4rem;
		margin-top: 4rem;
		margin-bottom: 2rem;
	}
	// .modal-content {
	// 	display: none;
	// }
	a {
		svg {
			width: 15px;
		}
	}
	button {
		border: none;
		background: var(--purple);
		font-size: 1.8rem;
		padding: 0.5rem 1.25rem;
		border-radius: 3px;
		color: $white;
		cursor: pointer;
	}
	// &.open {
	// 	z-index: 999;
	// 	justify-content: flex-start;
	// 	.modal-content {
	// 		display: block;
	// 	}
	// }
}